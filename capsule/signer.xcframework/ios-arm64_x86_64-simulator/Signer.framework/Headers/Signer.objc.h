// Objective-C API for talking to github.com/capsule-org/go-sdk/signer Go package.
//   gobind -lang=objc github.com/capsule-org/go-sdk/signer
//
// File is generated by gobind. Do not edit.

#ifndef __Signer_H__
#define __Signer_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class SignerSerializableSigner;
@class SignerSigner;
@class SignerTransaction;
@protocol SignerTxData;

@interface SignerTxData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
@end

/**
 * Flattened Signer that's gone through KEYGEN
 */
@interface SignerSerializableSigner : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull walletId;
@property (nonatomic) NSString* _Nonnull id_;
// skipped field SerializableSigner.Ids with unsupported type: []string

@property (nonatomic) long threshold;
// skipped field SerializableSigner.Signers with unsupported type: []string

@property (nonatomic) NSString* _Nonnull config;
@end

@interface SignerSigner : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

/**
 * Source https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go
 */
@interface SignerTransaction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

/**
 * *
* Computes an ECDH shared secret between the user's private key and another user's public key
* @param account - the address of the account
* @param publicKey - another user's public key in base64
* @returns the shared secret
 */
FOUNDATION_EXPORT void SignerComputeSharedSecret(NSString* _Nullable config);

FOUNDATION_EXPORT NSString* _Nonnull SignerCreateAccount(NSString* _Nullable serverUrl, NSString* _Nullable serializedSigner, NSString* _Nullable protocolId);

FOUNDATION_EXPORT NSString* _Nonnull SignerCreateProtocol(NSString* _Nullable walletId, NSString* _Nullable protocol, NSString* _Nullable serverUrl);

// skipped function CreateWallet with unsupported parameter or return types


/**
 * *
* Decrypts an ECIES ciphertext
* @param account - the address of the account
* @param ciphertext - the cipher to be decrypted
* @returns the decrypted text
 */
FOUNDATION_EXPORT void SignerDecrypt(NSString* _Nullable config);

FOUNDATION_EXPORT SignerSigner* _Nullable SignerDeserializeSigner(NSString* _Nullable signerParamsStr, NSString* _Nullable serverUrl, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull SignerGetAddress(NSString* _Nullable serializedSigner);

FOUNDATION_EXPORT NSString* _Nonnull SignerRefresh(NSString* _Nullable serverUrl, NSString* _Nullable serializedSigner, NSString* _Nullable protocolId);

/**
 * *
* Sign and send a RLP-encoded transaction
* @param txRLPBase64 - The RLP encoded transaction in base64
*                      (base64 is easier to decode in native)
 */
FOUNDATION_EXPORT NSString* _Nonnull SignerSendTransaction(NSString* _Nullable serverUrl, NSString* _Nullable serializedSigner, NSString* _Nullable txRLPBase64, NSString* _Nullable protocolId);

// skipped function SerializeSigner with unsupported parameter or return types


/**
 * *
* Sign arbitrary hash
* @param hashHex - input to sign encoded as a hex string
* @param signer - Address of the signer (must be unlocked)
 */
FOUNDATION_EXPORT void SignerSignHash(NSString* _Nullable config);

// skipped function SignerParamsFromStr with unsupported parameter or return types


/**
 * *
* Retrieve a session token for the account
*
 */
FOUNDATION_EXPORT BOOL SignerUnlockAccount(NSString* _Nullable config, NSString* _Nullable r1Signature, NSError* _Nullable* _Nullable error);

#endif
